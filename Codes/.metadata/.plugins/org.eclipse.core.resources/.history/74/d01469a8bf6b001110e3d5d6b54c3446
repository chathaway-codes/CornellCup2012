/*
 * Copyright (C) 2012 Charles Hathaway
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * IO_Thread.hpp
 *
 *  Created on: Mar 11, 2012
 *  Author: Charles Hathaway
 */

#ifndef IO_THREAD_HPP_
#define IO_THREAD_HPP_

#include <QThread>

#include <queue>
#include <list>

enum LogLevel {
	INFO,
	WARNING,
	ERROR,
	SEVERE
};

struct Message
{
	Message(LogLevel l, char *i, char *m)
	 : level(l), id(i), message(m) {
		// Left blank
	}
	LogLevel level;
	char *id, *message;
};

class IO_Filter
{
public:
	virtual bool applies(LogLevel level, char *id) = 0;
	virtual void write(LogLevel level, char *id, char *m) = 0;
};

class IO_Thread : public QThread
{
public:
	void log(LogLevel level, char *id, char *m);
protected:
	IO_Thread();
	~IO_Thread();
	void run();

	void push_back(Message *m);
private:
	std::queue<Message*> messages;
	std::list<IO_Filter*> filters;
	bool running;

	// Static functions
public:
	static IO_Thread *getInstance();
	static void cleanup();
protected:
private:
	static IO_Thread *instance;
};


#endif /* IO_THREAD_HPP_ */
